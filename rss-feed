<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<rss version="2.0"><channel><title>yacn.me</title><link>http://yacn.me</link><description>Yet Another Clever Name</description><item><title>Yet Another Intro Post</title><link>http://yacn.me/2014/01/01/yet-another-intro/</link><pubDate>Wed, 1 Jan 2014 00:00:00 -0500</pubDate><description>&lt;h1&gt;Yet Another Intro Post&lt;/h1&gt;&lt;p&gt;First off, let me thank &lt;a href=&quot;http://crsmithdev.com&quot;&gt;Chris Smith&lt;/a&gt; for his &lt;a href=&quot;http://crsmithdev.com/2013/09/02/a-blog-refresh-with-bootstrap-and-static/&quot;&gt;great blog post&lt;/a&gt; introducing &lt;a href=&quot;http://nakkaya.com/static.html&quot;&gt;Static&lt;/a&gt;, a Clojure static-site generator. Without it, I would still be messing around with &lt;a href=&quot;https://liquidz.github.io/misaki/&quot;&gt;Misaki&lt;/a&gt;, which is a tad more complex than I wanted at the time.&lt;/p&gt;&lt;p&gt;Also, thanks to &lt;a href=&quot;http://bootswatch.com&quot;&gt;Bootswatch&lt;/a&gt; for their collection of free Bootstrap themes, particularly &lt;a href=&quot;http://bootswatch.com/yeti&quot;&gt;Yeti&lt;/a&gt;, the one being used on this site.&lt;/p&gt;&lt;p&gt;Look forward to various posts about programming, infrastruture, Plex, life, the universe, and everything else.&lt;/p&gt;</description></item><item><title>Automated Media Server Overview</title><link>http://yacn.me/2014/01/01/plex-saas-overview/</link><pubDate>Wed, 1 Jan 2014 00:00:00 -0500</pubDate><description>&lt;h2&gt;Automated Media Server Overview&lt;/h2&gt;&lt;p&gt;In this inagural post, I will give a general overview of how I structured the infrastructure for my media server. First, a brief overview of my infrastructure. The systems below marked with &lt;code&gt;VM&lt;/code&gt; are virtual machines hosted on an ESXi box:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Windows Server 2012 &lt;code&gt;VM&lt;/code&gt;
  &lt;ul&gt;
    &lt;li&gt;Runs Plex Media Server and serves DNS requests for the network&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;Ubuntu 12.04 &lt;code&gt;VM&lt;/code&gt;
  &lt;ul&gt;
    &lt;li&gt;Runs Sick Beard, CouchPotato, and r(u)torrent&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;Synology DS413j
  &lt;ul&gt;
    &lt;li&gt;This is my NAS, holding 4x 3TB drives formatted with Synology Hybrid Raid  for 1 drive redundancy&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;System Overviews&lt;/h3&gt;&lt;h4&gt;Windows Server 2012 &lt;code&gt;VM&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;This box runs Plex Media Server (PMS), which organizes and fetches metadata for all of my media automatically. I chose Windows Server to host this service since at the time, PMS for Linux was beta software and there was no Silverlight support for Linux, meaning I would not be able to run the Netflix channel. This may have changed since then, but I have not looked into it recently. Now, PMS for Linux is out of beta and the Netflix channel has been broken for ages, which I never used anyways because my Roku has a native channel for Netflix. Because of these developments, I am looking into switching back to an all Ubuntu setup as I am a Linux guy at heart, and it will make my future plans easier to implement.&lt;/p&gt;&lt;p&gt;Additionally, this VM is running the Windows DNS server. I decied to use this over a traditional solution like BIND or dnsmasq mainly due to ease of use. Once I migrate PMS to Ubuntu, I will setup BIND or something similar as there would be no point in running an entire Windows VM just for DNS.&lt;/p&gt;&lt;h4&gt;Ubuntu 12.04 &lt;code&gt;VM&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;This box takes care of the grunt work of the operation. It runs rtorrent, rutorrent, Sick Beard, CouchPotato, and Subsonic. This medly of software takes care of downloading (r(u)torrent), renaming and moving (Sick Beard and CouchPotato), and serving music (Subsonic).&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://sickbeard.com&quot;&gt;Sick Beard&lt;/a&gt; is a Python webapp built on CherryPy which searches for and manages all of the TV shows I watch. &lt;a href=&quot;https://couchpota.to&quot;&gt;CouchPotato&lt;/a&gt; is a similar webapp also written in Python and based on Tornado, but for movies instead of TV.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://libtorrent.rakshasa.no&quot;&gt;rTorrent&lt;/a&gt; is an ncurses based torrent client I run as a daemon in the background using GNU screen. &lt;a href=&quot;https://code.google.com/p/rutorrent/&quot;&gt;ruTorrent&lt;/a&gt; is a web-frontend to rTorrent built in PHP that can be extended via plugins. I use several, such as &lt;a href=&quot;https://code.google.com/p/rutorrent/wiki/PluginRatio&quot;&gt;Ratio&lt;/a&gt;, &lt;a href=&quot;https://code.google.com/p/rutorrent/wiki/PluginAutotools&quot;&gt;AutoTools&lt;/a&gt;, and &lt;a href=&quot;https://code.google.com/p/rutorrent/wiki/PluginScheduler&quot;&gt;Scheduler&lt;/a&gt; to enhance and improve my workflow. The workflow itself is a tad complex, so it will be discussed in a later post.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://subsonic.org&quot;&gt;Subsonic&lt;/a&gt; is a free web-based media streamer which allows me to stream my music collection from anywhere.&lt;/p&gt;&lt;h4&gt;Synology DS413j&lt;/h4&gt;&lt;p&gt;All of the systems listed above are accessing, using, and manipulating a lot of data, but none of it, except for software-related files (such as the SQLite dbs used by Plex, Sick Beard, and CouchPotato), is actually stored on those systems. Each of them are mounting shared folders which are located on this NAS. I have Synology Hybrid Raid setup to allow me to add bigger drives incrementally in the as well as giving myself a 1-drive redundancy safety net. Using the software on the Synology itself, I am able to share these folders over my network via NFS, CIFS, and AFP.&lt;/p&gt;&lt;h3&gt;Plans for the Future&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Migrate to PMS on Ubuntu&lt;/li&gt;
  &lt;li&gt;Migrate DNS server to BIND or something similar&lt;/li&gt;
  &lt;li&gt;Implement Chef to automate provisioning of these systems&lt;/li&gt;
  &lt;li&gt;Move from ESXi to OpenStack&lt;/li&gt;
  &lt;li&gt;Implement Sensu or Riemann to monitor the above servers and apps&lt;/li&gt;
&lt;/ul&gt;</description></item></channel></rss>