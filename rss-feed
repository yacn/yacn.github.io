<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<rss version="2.0"><channel><title>yacn.me</title><link>http://yacn.me</link><description>Yet Another Clever Name</description><item><title>Plex Issue Tracker and Custom Icon Font</title><link>http://yacn.me/2014/03/08/plex-issue-tracker/</link><pubDate>Sat, 8 Mar 2014 00:00:00 -0500</pubDate><description>&lt;h1&gt;Plex Issue Tracker&lt;/h1&gt;&lt;p&gt;I've been hosting a Plex Media Server and sharing it with friends for almost a year now (started once I moved off campus and my internet allowed it) and in that time there's been a few bumps in the road, but overall it has been running quite smoothly. There's been the occasional glitch, e.g the Plex Media Scanner stops running (meaning no new shows are detected) necessitating a restart of the Plex service or the Plex service itself stops working and needs a restart. These issues are minor and take minimal effort to fix as I simply need to RDP in and restart the service. However, there's the occasional issue which requires a bit more manual intervention, such as shows having improper metadata. Since I'm not the only user of the server, there's actually a number of shows present that I do not keep up with at all. What ends up happening is I'll be hanging out with one of my friends and they'll mention some issue they're having with Plex. I then make a mental note to remember to fix it when I return home. Being the human I am, I don't have perfect memory, which means things sometimes slip through the cracks.&lt;/p&gt;&lt;p&gt;With that in mind, I decided to create a place to file support requests for GUNTER, my Plex server. I created a GitHub repository &lt;a href=&quot;https://github.com/yacn/gunter-issues&quot;&gt;gunter-issues&lt;/a&gt; to hold any support requests / issues related to Plex or GUNTER. Using the free service &lt;a href=&quot;https://waffle.io&quot;&gt;waffle.io&lt;/a&gt;, I was able to turn that repo into an &lt;a href=&quot;https://waffle.io/yacn/gunter-issues&quot;&gt;open and online agile/kanban board&lt;/a&gt;. Now, people can file issues with the knowledge that if I forget about it, it's right there on the board. It is my hope that by introducing this, GUNTER/Plex can only improve.&lt;/p&gt;&lt;h3&gt;Plex Info Page and Icon Fonts&lt;/h3&gt;&lt;p&gt;While integrating the issue tracker into this site, I wanted to add a link to the a page containing information and resources about Plex. Since it was going to be in the upper-right corner, I wanted it to fit in with the &lt;a href=&quot;fontawesome.github.io/Font-Awesome/&quot;&gt;Font Awesome&lt;/a&gt; icons I was already using. I came up with the idea of putting together a version of the Plex Media Center logo in the style of the Font Awesome icons.&lt;/p&gt;&lt;p&gt;I started by finding the PMS logo and then modified its coloring to fit in with the Font Awesome icons. I ended up with a PNG with transparency, but then realized that this wouldn't scale well if I wanted to use it at a bigger size. I decided at that point to convert it to an SVG. Unfortunately while the software I used to modify the image (&lt;a href=&quot;http://www.pixelmator.com/&quot;&gt;Pixelmator&lt;/a&gt;) supports creating vector-like graphics, it does not support exporting to SVGs. However, I was able to use a piece of software called &lt;a href=&quot;http://vectormagic.com/desktop&quot;&gt;Vector Magic&lt;/a&gt; to take the PSD exported by Pixelmator and feed it in and with about 5 clicks, I had an SVG!&lt;/p&gt;&lt;p&gt;I then spent quite a bit of time futzing around with the CSS sizing and positioning, trying to get the SVG to appear, but nothing seemed to work. Frustrated and out of ideas, I googled &quot;create own font awesome icons svg&quot; and stumbled upon this awesome RubyGem called &lt;a href=&quot;http://fontcustom.com&quot;&gt;Font Custom&lt;/a&gt;, which takes a directory of SVG files and converts them to a CSS file that you can include on your sites. With this in hand, I was able to convert my SVG into a font and then it was a simple matter of adding an item to the navigation list like all the other links! In the end, I think it looks and feels like a native Font Awesome icon and was well worth the effort to get it going.&lt;/p&gt;</description></item><item><title>Migrating from dvm to boot2docker</title><link>http://yacn.me/2014/03/07/migrate-dvm-to-boot2docker/</link><pubDate>Fri, 7 Mar 2014 00:00:00 -0500</pubDate><description>&lt;h1&gt;Migrating from &lt;code&gt;dvm&lt;/code&gt; to &lt;code&gt;boot2docker&lt;/code&gt;&lt;/h1&gt;&lt;h2&gt;Preconditions&lt;/h2&gt;&lt;p&gt;About two weeks ago, I wrote about how I got &lt;a href=&quot;https://fnichol.github.io/dvm/&quot;&gt;dvm&lt;/a&gt; working with &lt;a href=&quot;https://www.docker.io&quot;&gt;Docker&lt;/a&gt; using a specified network range for the &lt;code&gt;docker0&lt;/code&gt; bridge. A quick overview of dvm, for the uninitiated: It's a Bash script wrapped around a &lt;code&gt;Vagrantfile&lt;/code&gt; which uses a Vagrant box based off the &lt;a href=&quot;http://boot2docker.io&quot;&gt;boot2docker&lt;/a&gt; image. The original boot2docker script itself is simply a Bash script wrapped around the &lt;a href=&quot;http://www.virtualbox.org/manual/ch08.html&quot;&gt;VBoxManage&lt;/a&gt; command. There's an &lt;a href=&quot;https://github.com/boot2docker/boot2docker-cli&quot;&gt;on-going effort&lt;/a&gt; to rewrite the boot2docker script in &lt;a href=&quot;https://golang.org&quot;&gt;Go&lt;/a&gt;, but it is currently experimental. Anyways, dvm uses Vagrant to interact with VirtualBox, where Vagrant itself is a wrapper around interacting with VirtualBox. Since it uses Vagrant, it needs &lt;a href=&quot;https://github.com/mitchellh/boot2docker-vagrant-box/&quot;&gt;a Vagrant Box&lt;/a&gt; to create the VM, meaning that each time a new boot2docker image is released, a new Vagrant Box must also be created before dvm can use the latest version.&lt;/p&gt;&lt;p&gt;You've probably already guessed why I'm migrating away, there's just simply too many moving pieces that can each become a bottleneck. dvm can bottleneck with bugfixes while I can also be bottlenecked by waiting for new Vagrant Boxes to be released. To eliminate this, I have decided to move away from using dvm to using the original boot2docker (I'm actually using boot2docker-cli, the Go port of the tool, but more on that later).&lt;/p&gt;&lt;h2&gt;Moving previous work&lt;/h2&gt;&lt;p&gt;The downside to this is that I needed to find a way to perform the same customizations I was using with dvm to change the network range of the &lt;code&gt;docker0&lt;/code&gt; interface. With dvm, adding local customizations is as simple as editing the provisioning script which is run wheneve the VM is created. Using boot2docker itself wasn't as straight forward. As boot2docker is run entirely from memory, a persistence disk must be attached to the VM to provide a place to save things so they won't be deleted. While dvm handled this in the &lt;code&gt;Vagrantfile&lt;/code&gt;, the boot2docker script actually creates it for you as well and mounts it to &lt;code&gt;/mnt/sda1&lt;/code&gt;. To add local customizations, you can place what you want to do into a script titled &lt;code&gt;bootlocal.sh&lt;/code&gt; and place that inside &lt;code&gt;/var/lib/boot2docker&lt;/code&gt; (which is symlinked to &lt;code&gt;/mnt/sda1/var/lib/boot2docker&lt;/code&gt;).&lt;/p&gt;&lt;p&gt;The tasks I needed to take care of in this script were to:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Install bridge utils if not present&lt;/li&gt;
  &lt;li&gt;Modify Docker's init script to add the &lt;code&gt;--bip&lt;/code&gt; option&lt;/li&gt;
  &lt;li&gt;Create a folder on the persistence disk for use as a mount point for SSHFS&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;To accomplish 1 and 2, I was able to re-use most of the work done in dvm's &lt;code&gt;Vagrantfile&lt;/code&gt;. For 3, it was simply a matter of creating a folder. Once I had written the script, however, I realized I needed to get it on the VM disk before it'd be useful! I could have simply re-typed it while SSH'd into the VM, but that's not very DRY and I'll likely need to add more files to the VM at a later point. Luckily, the boot2docker maintainers &lt;a href=&quot;https://github.com/boot2docker/boot2docker/blob/master/doc/WORKAROUNDS.md#folder-sharing&quot;&gt;provide a workaround&lt;/a&gt; using &lt;a href=&quot;https://osxfuse.github.io&quot;&gt;FUSE for OS X and SSHFS&lt;/a&gt;, so I was able to mount a folder from my host laptop on the VM with minimal fuss.&lt;/p&gt;&lt;p&gt;The one issue I ran into was with the command used to mount the folder. In the steps given, they have you create a file &lt;code&gt;b2d-passwd&lt;/code&gt; containing the password for the docker user on the VM. Then, when you go to mount the folder on the VM, they have you run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sshfs docker@localhost:/mnt/sda1/myapp ~/myapp -oping_diskarb,volname=b2d-myapp -p 2022 -o reconnect -o UserKnownHostsFile=/dev/null -o password_stdin &amp;lt; ~/.boot2docker/b2d-passwd
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;where &lt;code&gt;/mnt/sda1/myapp&lt;/code&gt; is the mount-point on the VM and &lt;code&gt;~/myapp&lt;/code&gt; is the folder on the host being shared with the VM. The part that I had issue with was &lt;code&gt;-o password_stdin &amp;lt; ~/.boot2docker/b2d-passwd&lt;/code&gt;. No matter what I tried, I always got a timeout error while waiting for the prompt. When I removed that part of the command, the reason for this became immediately obvious: I was being asked &lt;code&gt;yes/no&lt;/code&gt; about the VM's SSH key, meaning the prompt would never show! As of now, I haven't found a workaround, it is easy enough to type &lt;code&gt;yes&lt;/code&gt; and &lt;code&gt;tcuser&lt;/code&gt; when I want to mount a folder.&lt;/p&gt;&lt;h2&gt;Bumps in the road&lt;/h2&gt;&lt;p&gt;Once that was working, it was trivial to move the &lt;code&gt;bootlocal.sh&lt;/code&gt; script from the shared folder to its place in &lt;code&gt;/var/lib/boot2docker&lt;/code&gt;. Then I simply logged out, stopped the VM, and copied the VMDK to a safe place. Now when I want to create a new boot2docker VM, I just need to copy the VMDK into place (&lt;code&gt;~/.boot2docker&lt;/code&gt;) before running &lt;code&gt;boot2docker init&lt;/code&gt;. Once that completes, I have a fresh VM with all my local customizations. The next logical step for this would be to create a customized ISO that includes the &lt;code&gt;bootlocal.sh&lt;/code&gt; to remove the need to remember to copy the VMDK back into place when creating a new VM.&lt;/p&gt;&lt;p&gt;However, this is where the issues have started springing up. When I tried to run Test Kitchen through the new boot2docker VM, I ran into the issue where &lt;a href=&quot;https://github.com/portertech/kitchen-docker/issues/24&quot;&gt;the VM hangs waiting for the container to be ready&lt;/a&gt;. Reading through that thread it seemed like any issues with the software itself (Test Kitchen, kitchen-docker, boot2docker, docker itself, etc) should have been fixed in the versions I am using (Test Kitchen 1.2.1, kitchen-docker installed from GitHub, boot2docker 0.6.0, docker 0.8.1). This issue seemed familiar though, and upon further digging I narrowed it down to routes getting crossed and confused. Aha! This was why I moved to dvm in the first place. dvm is slightly different from the default boot2docker because it creates a &lt;a href=&quot;http://www.virtualbox.org/manual/ch06.html#network_hostonly&quot;&gt;host-only network&lt;/a&gt; to run Docker on. This solves the issue of criss-crossed routes, so I set out to find if this feature existed in boot2docker.&lt;/p&gt;&lt;p&gt;In my research, I found this &lt;a href=&quot;https://github.com/boot2docker/boot2docker/pull/198&quot;&gt;hostonly interface-related&lt;/a&gt; pull request. At the time of this writing, the pull request is still open, so this feature hasn't made its way into the main boot2docker. Fortunately though, at the bottom of the pull request the discussion gets moved to &lt;a href=&quot;https://github.com/boot2docker/boot2docker-cli/pull/42&quot;&gt;this pull request&lt;/a&gt; on the new &lt;code&gt;boot2docker-cli&lt;/code&gt; repo. That request was merged, so the feature in some form exists. This is why I am as of now using the &lt;code&gt;boot2docker-cli&lt;/code&gt; tool instead of the normal one.&lt;/p&gt;&lt;h2&gt;What's left to do&lt;/h2&gt;&lt;p&gt;Once that was all figured out, my next move was to try to get test kitchen and kitchen-docker working together with this new boot2docker VM. I re-created my VMDK w/ the &lt;code&gt;bootlocal.sh&lt;/code&gt; script and tried to run &lt;code&gt;kitchen test&lt;/code&gt;. Unfortunately, this fails right after pulling in the ubuntu images. Looking through the logs, it seems like the containers are unable to access the Internet. Also, the boot2docker-cli creates a new hostonly interface for each VM it creates, but it also never deletes them after the VMs are deleted. This also leads to issues with criss-crossed routes as packets are being sent to the wrong hostonly interface. Lastly, I seem to be unable to run &lt;code&gt;boot2docker-cli ssh&lt;/code&gt; or &lt;code&gt;boot2docker ssh&lt;/code&gt; to log into the VMs while I'm connected to my work's VPN. This is strange since I was able to use both of those commands just fine while at work, but as soon as I turned my VPN off, they both started working. I suspect it is also an issue of criss-crossed routes. &lt;/p&gt;&lt;p&gt;In summary, the following work is left to do before the migration from dvm to boot2docker is complete:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Figure out why containers cannot reach the internet&lt;/li&gt;
  &lt;li&gt;Modify &lt;code&gt;boot2docker-cli init/delete&lt;/code&gt; to keep track of the interfaces it creates so they can be deleted with the VM.&lt;/li&gt;
  &lt;li&gt;Figure out why I'm unable to SSH into the VM while logged into my work's VPN.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;I've started reading about Go so that I can contribute patches, so hopefully I should be able to make some progress on number 2 before too long. It seems to be a simple matter of creating a map of the interfaces created to the VMs their attached to, but there's all of Go to grapple with first. It's going to be a busy upcoming week too, as the 2014 Northeast CCDC is this Friday, Saturday, and Sunday at UNH. Fun fun fun, so much to do, so little time.&lt;/p&gt;</description></item><item><title>Sensu EC2 Node Handler</title><link>http://yacn.me/2014/02/24/sensu-ec2-node-handler/</link><pubDate>Mon, 24 Feb 2014 00:00:00 -0500</pubDate><description>&lt;h1&gt;Sensu EC2 Node Handler&lt;/h1&gt;&lt;h2&gt;The Problem&lt;/h2&gt;&lt;p&gt;At work, we run &lt;a href=&quot;https://sensuapp.org&quot;&gt;Sensu&lt;/a&gt; as the base for our metrics, monitoring, and alerting pipeline. A while back, we were running into an issue with phantom keepalive alerts due to how Sensu was determining whether or not a node still existed. The way it was determining this was to query our &lt;a href=&quot;https://www.getchef.com&quot;&gt;Chef&lt;/a&gt; server to check whether or not the client and node existed there. However, due to how we provision and terminate nodes (using an internal knife plugin), the clients and nodes on the Chef server are not removed until the next time they are to be created. (Really, we should update the deletion component to remove the clients and nodes, but it is a low priority at this point).&lt;/p&gt;&lt;p&gt;Due to this workflow, when we would terminate a cluster, we would encounter a &quot;keepalive storm&quot;, where we would be flooded with keepalive alerts for the cluster we just terminated. This would cause our Sensu server to become overloaded with queued up events to handle. When our next Chef run would execute, the Sensu server would be signaled to restart. However, due to the massive event queue that had built up, the time needed to restart the process would exceed the threshold set for the service's script, set in &lt;code&gt;/etc/default/sensu&lt;/code&gt;. I believe the default was 10 seconds, we increased it to 30 while investigating to try and soothe the inevitable Chef runs.&lt;/p&gt;&lt;p&gt;Nevertheless, the process would nearly always fail to restart, which caused the Chef run to fail and would leave teh Sensu server in an incorrect state. The remedy this state, we owuld need to manually stop and start each of the Sensu components (API, server, client) manually. This was very annoying and inconveniencing, so I set out to find a fix for the situation.&lt;/p&gt;&lt;h2&gt;The Solution&lt;/h2&gt;&lt;p&gt;To solve our phantom keepalives and subsequent &quot;keepalive storms&quot;, I created a Sensu handler for the keepalive event. When it handles a keepalive event, instead of checking the Chef server to determine whether the node still exists, it checks EC2. If the node is not found in EC2, it is removed from Sensu as a client.&lt;/p&gt;&lt;p&gt;When we implemented this handler at work, we were able to eliminate the &quot;keepalive storms&quot; and phantom keepalive alerts, thus increasing the stability of our Sensu server. You can check out the plugin in the official &lt;a href=&quot;https://github.com/sensu/sensu-community-plugins/blob/master/handlers/other/ec2_node.rb&quot;&gt;Sensu Community Plugins&lt;/a&gt; repository on GitHub. Hopefully it will be of some use to others.&lt;/p&gt;</description></item><item><title>Fixing dvm with Test Kitchen</title><link>http://yacn.me/2014/02/24/dvm-test-kitchen-docker/</link><pubDate>Mon, 24 Feb 2014 00:00:00 -0500</pubDate><description>&lt;h1&gt;Fixing dvm with Test Kitchen&lt;/h1&gt;&lt;h2&gt;Finding dvm&lt;/h2&gt;&lt;p&gt;For the past few weeks at work, I've been conducting research on the side with the goal of setting up a continuous integration environment for our Chef cookbooks. I've decided to use &lt;a href=&quot;https://kitchen.ci&quot;&gt;Test Kitchen&lt;/a&gt; with the &lt;a href=&quot;https://github.com/portertech/kitchen-docker&quot;&gt;kitchen-docker&lt;/a&gt; driver as the base for our integration testing framework (of which the specifics are out of the scope of this post).&lt;/p&gt;&lt;p&gt;Now that I'd chosen our stack, it was time to get kitchen-docker, Test Kitchen, and Docker working together. I needed a solution which would allow me to work with Docker locally on OS X. Luckily, there are two related projects allowing me to do just that, &lt;a href=&quot;https://github.com/fnichol/dvm&quot;&gt;dvm&lt;/a&gt; and &lt;a href=&quot;https://github.com/boot2docker/boot2docker&quot;&gt;boot2docker&lt;/a&gt; (dvm is actually just a wrapper around Vagrant using a &lt;a href=&quot;https://github.com/mitchellh/boot2docker-vagrant-box&quot;&gt;boot2docker box&lt;/a&gt;).&lt;/p&gt;&lt;h2&gt;Bumpy start&lt;/h2&gt;&lt;p&gt;The first issue I ran into was Docker choosing a network range which conflicted with the network range our work runs in. I'd actually run into this issue before, several months ago when I was first testing out Docker. At the time, there was no immediate workaround, so put it in the back of my mind for later. Docker has since been updated to attempt to be smart about choosing the network range by looking for any conflicting networks. However, this issue still affects us because Docker is being run through a VM, meaning it will not detect the conflicting network.&lt;/p&gt;&lt;p&gt;A more recent addition to Docker is the &lt;code&gt;--bip=&amp;quot;&amp;quot;&lt;/code&gt; option, which you can use to specify a CIDR range for the &lt;code&gt;docker0&lt;/code&gt; bridge that Docker creates. However, to use this new feature with dvm, I was going to need to make some modifications to support it.&lt;/p&gt;&lt;h2&gt;Modifying dvm&lt;/h2&gt;&lt;p&gt;The way dvm works is by allowing you to set configuration options in a file &lt;code&gt;~/.dvm/dvm.conf&lt;/code&gt;. Those settings are environment variables which are exported when creating the boot2docker VM. To add support for &lt;code&gt;--bip&lt;/code&gt;, I added the configuration directive &lt;code&gt;DOCKER0_CIDR&lt;/code&gt; to the config file. I then modified the &lt;code&gt;Vagrantfile&lt;/code&gt; to use the new argument if specified. I saved my changes, crossed my fingers, and typed &lt;code&gt;dvm up&lt;/code&gt;. To my dismay, passing in that option didn't seem to affect anything!&lt;/p&gt;&lt;h2&gt;(Re)building the bridge&lt;/h2&gt;&lt;p&gt;After some more reading, I learned that if the &lt;code&gt;docker0&lt;/code&gt; bridge has already been created, the IP range assigned to it will not be affected by the &lt;code&gt;--bip&lt;/code&gt; option. To use the option, you need to first make sure the &lt;code&gt;docker0&lt;/code&gt; bridge does not exist when starting Docker, meaning that if it does exist, it will need to be deleted.&lt;/p&gt;&lt;p&gt;Deleting a bridge seems simple enough, you just need to run &lt;code&gt;brctl delbr nameofbridge&lt;/code&gt;. Unfortunately, the &lt;code&gt;brctl&lt;/code&gt; utility is not included in the release of &lt;a href=&quot;http://www.tinycorelinux.net/&quot;&gt;Tiny Core Linux&lt;/a&gt; used by boot2docker. I now set off to find a bridge-utils package I could install on the distro. Fortunately I didn't need to dig for too long, there was a link to such a package in &lt;a href=&quot;https://github.com/boot2docker/boot2docker/blob/master/doc/FAQ.md&quot;&gt;one of the docs&lt;/a&gt; for boot2docker.&lt;/p&gt;&lt;p&gt;Now all I needed to do was update the &lt;code&gt;Vagrantfile&lt;/code&gt; to check whether or not the &lt;code&gt;DOCKER0_CIDR&lt;/code&gt; option was set, and if so, setup the arguments, stop the currently running Docker daemon, install the bridge utils, and remove the &lt;code&gt;docker0&lt;/code&gt; bridge. I ran &lt;code&gt;dvm up&lt;/code&gt; and low and behold, it worked!&lt;/p&gt;&lt;p&gt;By this time I'm feeling pretty good, I've gotten much farther than ever before. I run &lt;code&gt;kitchen create&lt;/code&gt; to create a container and, you guessed it, it worked! Running &lt;code&gt;kitchen converge&lt;/code&gt; also worked as expected, which is great as now my container can access hosts within our local network as well as the internet at large! Satisfied with myself, I ran &lt;code&gt;kitchen destroy&lt;/code&gt; to delete the containers. Oh no, it doesn't work!&lt;/p&gt;&lt;h2&gt;One last jam&lt;/h2&gt;&lt;p&gt;Unfortunately I ran into a jam (damn you Chris Christie!), running &lt;code&gt;kitchen destroy&lt;/code&gt; throws an exception! Looking at the message returned, it seems to be an issue related with trying to stop and remove the container, something appears to be holding a lock over it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;|ruby-1.9.3-p448| isaacs-air in ~/git/yacn/dvm/tmp
± |fix/unable-to-stop-delete-containers ✗| → kitchen destroy
-----&amp;gt; Starting Kitchen (v1.2.1)
-----&amp;gt; Destroying &amp;lt;default-ubuntu&amp;gt;...
368ccd5979763ce38c072d9751417ba457827146548d7a04676b3a5795c806ca
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; ------Exception-------
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; Class: Kitchen::ActionFailed
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; Message: Failed to complete #destroy action: [Expected process to exit with [0], but received &amp;#39;1&amp;#39;
---- Begin output of docker -H tcp://192.168.42.43:4243 rm 368ccd5979763ce38c072d9751417ba457827146548d7a04676b3a5795c806ca ----
STDOUT:
STDERR: Error: container_delete: Cannot destroy container 368ccd5979763ce38c072d9751417ba457827146548d7a04676b3a5795c806ca: Driver aufs failed to remove root filesystem 368ccd5979763ce38c072d9751417ba457827146548d7a04676b3a5795c806ca: rename /var/lib/docker/aufs/mnt/368ccd5979763ce38c072d9751417ba457827146548d7a04676b3a5795c806ca /var/lib/docker/aufs/mnt/368ccd5979763ce38c072d9751417ba457827146548d7a04676b3a5795c806ca-removing: device or resource busy
2014/02/24 14:07:29 Error: failed to remove one or more containers
---- End output of docker -H tcp://192.168.42.43:4243 rm 368ccd5979763ce38c072d9751417ba457827146548d7a04676b3a5795c806ca ----
Ran docker -H tcp://192.168.42.43:4243 rm 368ccd5979763ce38c072d9751417ba457827146548d7a04676b3a5795c806ca returned 1]
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; ----------------------
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; Please see .kitchen/logs/kitchen.log for more details
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; Also try running `kitchen diagnose --all` for configuration
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Yikes, that doesn't seem good. Well, lets see if the container is still there. I logged into the &lt;code&gt;dvm&lt;/code&gt; machine via &lt;code&gt;dvm ssh&lt;/code&gt; and ran &lt;code&gt;docker ps&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;|ruby-1.9.3-p448| isaacs-air in ~/git/yacn/dvm/tmp
± |fix/unable-to-stop-delete-containers ✗| → dvm ssh
                        ##        .
                  ## ## ##       ==
               ## ## ## ##      ===
           /&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;\___/ ===
      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~
           \______ o          __/
             \    \        __/
              \____\______/
 _                 _   ____     _            _
| |__   ___   ___ | |_|___ \ __| | ___   ___| | _____ _ __
| &amp;#39;_ \ / _ \ / _ \| __| __) / _` |/ _ \ / __| |/ / _ \ &amp;#39;__|
| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   &amp;lt;  __/ |
|_.__/ \___/ \___/ \__|_____\__,_|\___/ \___|_|\_\___|_|
boot2docker: 0.5.4
docker@boot2docker:~$ docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
docker@boot2docker:~$ exit
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Hmm, so it looks like the container was actually stopped. Researching this issue led me to &lt;a href=&quot;https://github.com/dotcloud/docker/issues/2714#issuecomment-34408878&quot;&gt;this&lt;/a&gt; thread. The issue seems to be related to using a symlink where Docker expects its runtime root to be. By default, this is &lt;code&gt;/var/lib/docker&lt;/code&gt;, but in boot2docker, this has been symlinked to &lt;code&gt;/mnt/sda/var/lib/docker&lt;/code&gt;. This causes Docker to be unable to stop or remove any of the containers it creates, as it doesn't seem to follow the symlink. &lt;/p&gt;&lt;p&gt;The remedy is to use the &lt;code&gt;-g&lt;/code&gt; option to set the path to use as the root of Docker's runtime to the directory the symlink points to. Looking at the file in boot2docker where the Docker daemon is started (&lt;a href=&quot;https://github.com/boot2docker/boot2docker/blob/master/rootfs/rootfs/usr/local/etc/init.d/docker#L18&quot;&gt;/usr/local/etc/init.d/docker&lt;/a&gt;), it seems like the &lt;code&gt;-g&lt;/code&gt; option should already be provided. All the more curious and needs further investigation.&lt;/p&gt;&lt;h2&gt;A &lt;code&gt;sed&lt;/code&gt; to far&lt;/h2&gt;&lt;p&gt;The culprit, it turns out, is the &lt;code&gt;Vagrantfile&lt;/code&gt; used by dvm! In the &lt;a href=&quot;https://github.com/fnichol/dvm/blob/master/Vagrantfile#L89&quot;&gt;provisioning script&lt;/a&gt; used to restart the Docker daemon with the args provided in &lt;code&gt;DOCKER_ARGS&lt;/code&gt;, there's a &lt;code&gt;sed&lt;/code&gt; command which looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sed -i -e &amp;#39;s|docker -d .* $EXPOSE_ALL|docker -d #{args}|&amp;#39; $INITD
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;where: &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;$INITD&lt;/code&gt; is &lt;code&gt;/usr/local/etc/init.d/docker&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;$EXPOSE_ALL&lt;/code&gt; is a variable set in that file&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;#{args}&lt;/code&gt; is the string interpolation of the &lt;code&gt;args&lt;/code&gt; defined in &lt;code&gt;DOCKER_ARGS&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;This command is only run if you modify either &lt;code&gt;args&lt;/code&gt; or &lt;code&gt;DOCKER_ARGS&lt;/code&gt;, which is how I believe it slipped through the cracks.&lt;/p&gt;&lt;p&gt;What happens is the part of the line in &lt;code&gt;/usr/local/etc/init.d/docker&lt;/code&gt; that is specifying the &lt;code&gt;-g&lt;/code&gt; option is wiped out when the new &lt;code&gt;args&lt;/code&gt; are added to the command. There were a few options to solving this:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Update the README to state that if you modify &lt;code&gt;DOCKER_ARGS&lt;/code&gt;, you must make sure to include the &lt;code&gt;-g&lt;/code&gt; option&lt;/li&gt;
  &lt;li&gt;Update the &lt;code&gt;Vagrantfile&lt;/code&gt; to check if &lt;code&gt;DOCKER_ARGS&lt;/code&gt; is modified, and if so, to check that it includes the &lt;code&gt;-g&lt;/code&gt; option, adding it if it does not.&lt;/li&gt;
  &lt;li&gt;Update the &lt;code&gt;sed&lt;/code&gt; command to save the &lt;code&gt;-g&lt;/code&gt; option and use a backreference to it.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;I chose to implement option 3 as it seemed the simplest and most transparent way to accomplish the goal.&lt;/p&gt;&lt;h2&gt;One last run&lt;/h2&gt;&lt;p&gt;With the changes in place, it was time to test them out again. I created a new &lt;code&gt;dvm&lt;/code&gt; VM with the updated &lt;code&gt;Vagrantfile&lt;/code&gt; and a &lt;code&gt;dvm.conf&lt;/code&gt; specifying &lt;code&gt;DOCKER0_CIDR&lt;/code&gt;. Once that was created, I checked to make sure the &lt;code&gt;docker0&lt;/code&gt; bridge had the new IP range. So far, so good, so I ran &lt;code&gt;kitchen create&lt;/code&gt; and watched as Test Kitchen pulled in the Ubuntu repo and created a container for me. Still looking good, but all of this did work before. I enter &lt;code&gt;kitchen destroy&lt;/code&gt; for the final test and...&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;|ruby-1.9.3-p448| isaacs-air in ~/git/yacn/dvm/tmp
± |fix/unable-to-stop-delete-containers ✗| → kitchen destroy
-----&amp;gt; Starting Kitchen (v1.2.1)
-----&amp;gt; Destroying &amp;lt;default-ubuntu&amp;gt;...
2118a87d5cf2f5d6bc502a3f086b4ab828e6c3023624e2da9e8590eae043ec1f
2118a87d5cf2f5d6bc502a3f086b4ab828e6c3023624e2da9e8590eae043ec1f
Finished destroying &amp;lt;default-ubuntu&amp;gt; (0m0.14s).
-----&amp;gt; Kitchen is finished. (0m0.20s)

|ruby-1.9.3-p448| isaacs-air in ~/git/yacn/dvm/tmp
± |fix/unable-to-stop-delete-containers ✗| → kitchen list
Instance Driver Provisioner Last Action
default-ubuntu Docker ChefZero &amp;lt;Not Created&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;WooHoo! It works! &lt;/p&gt;&lt;h2&gt;Conclusion&lt;/h2&gt;&lt;p&gt;To summarize, I needed to update dvm to allow me to set the IP range of the &lt;code&gt;docker0&lt;/code&gt; bridge. This required me to install bridge-utils for &lt;code&gt;brctl&lt;/code&gt; to remove the previously created &lt;code&gt;docker0&lt;/code&gt; bridge before my new IP range could take effect. Once that was implemented, I discovered a bug in the provisioning script for dvm causing which prevented stopping or deleting containers. Both fixes are currently open as pull requests:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fnichol/dvm/pull/21&quot;&gt;sed fix&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fnichol/dvm/pull/22&quot;&gt;Setting docker0 CIDR range&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Assignment 3 Question 3</title><link>http://yacn.me/2014/02/13/assignment3-question3/</link><pubDate>Thu, 13 Feb 2014 00:00:00 -0500</pubDate><description>&lt;h1&gt;Assignment 3 Question 3&lt;/h1&gt;&lt;h2&gt;As-Is Use Case Model of Blackboard LMS&lt;/h2&gt;&lt;h3&gt;Actors&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Instructor&lt;/li&gt;
  &lt;li&gt;Student&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Use Cases&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Instructor grades assignment&lt;/li&gt;
  &lt;li&gt;Student submits assignment&lt;/li&gt;
  &lt;li&gt;Student views grades&lt;/li&gt;
  &lt;li&gt;Instructor posts class materials&lt;/li&gt;
  &lt;li&gt;Student takes quiz&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;UML Use Case Diagram&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://ccs.neu.edu/home/iboehman/a3ucm.png&quot;  alt=&quot;Use Case Diagram&quot;/&gt;&lt;/p&gt;&lt;h3&gt;&quot;Submit Assignment&quot; Use Case Narrative from &quot;System As-Is&quot; Perspective&lt;/h3&gt;&lt;h4&gt;Pre-Conditions&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Student must be logged in&lt;/li&gt;
  &lt;li&gt;Student has navigated to the course page&lt;/li&gt;
  &lt;li&gt;Assignment is open&lt;/li&gt;
  &lt;li&gt;Student has not submitted before or assignment allows multiple submissions&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;em&gt;The use case starts&lt;/em&gt; when the student clicks the &quot;Assignment&quot; navigational link.&lt;/li&gt;
  &lt;li&gt;Student clicks name of assignment {V1, V2}&lt;/li&gt;
  &lt;li&gt;Student adds completed assignment to submission {V3, V4}&lt;/li&gt;
  &lt;li&gt;Student adds any comments for submission&lt;/li&gt;
  &lt;li&gt;Student clicks submit&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Variations&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;V1: Assignment is closed
  &lt;ol&gt;
    &lt;li&gt;System prompts student with message saying assignment is not active&lt;/li&gt;
    &lt;li&gt;Student may now navigate away from the page&lt;/li&gt;
  &lt;/ol&gt;&lt;/li&gt;
  &lt;li&gt;V2: Student has submitted previously and multiple submissions not allowed
  &lt;ol&gt;
    &lt;li&gt;System prompts student that they have already submitted for this assignment&lt;/li&gt;
    &lt;li&gt;Student may now navigate away from the page&lt;/li&gt;
  &lt;/ol&gt;&lt;/li&gt;
  &lt;li&gt;V3: Student submits text submission
  &lt;ol&gt;
    &lt;li&gt;Student clicks &quot;Write Submission&quot;&lt;/li&gt;
    &lt;li&gt;Student writes in the presented box&lt;/li&gt;
  &lt;/ol&gt;&lt;/li&gt;
  &lt;li&gt;V4: Student attaches file for submission
  &lt;ol&gt;
    &lt;li&gt;Student clicks &quot;Browse My Computer&quot;&lt;/li&gt;
    &lt;li&gt;Student selects the correct file(s) in the pop-up window and clicks &quot;OK&quot;&lt;/li&gt;
  &lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Use Case Rankings&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Use Case &lt;/th&gt;
      &lt;th&gt;Importance to Users &lt;/th&gt;
      &lt;th&gt;Architectural Impact &lt;/th&gt;
      &lt;th&gt;Frequence of Use &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Instructor Grades Assignment &lt;/td&gt;
      &lt;td&gt;13 &lt;/td&gt;
      &lt;td&gt;2 &lt;/td&gt;
      &lt;td&gt;13 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Student Submits Assignment &lt;/td&gt;
      &lt;td&gt;13 &lt;/td&gt;
      &lt;td&gt;2 &lt;/td&gt;
      &lt;td&gt;13 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Student Views Grades &lt;/td&gt;
      &lt;td&gt;13 &lt;/td&gt;
      &lt;td&gt;5 &lt;/td&gt;
      &lt;td&gt;13 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Instructor Posts Materials &lt;/td&gt;
      &lt;td&gt;8 &lt;/td&gt;
      &lt;td&gt;5 &lt;/td&gt;
      &lt;td&gt;5 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Student Takes Quiz &lt;/td&gt;
      &lt;td&gt;3 &lt;/td&gt;
      &lt;td&gt;8 &lt;/td&gt;
      &lt;td&gt;5 &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</description></item><item><title>Assignment 3 Question 2</title><link>http://yacn.me/2014/02/13/assignment3-question2/</link><pubDate>Thu, 13 Feb 2014 00:00:00 -0500</pubDate><description>&lt;h1&gt;Assignment 3 Question 2&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://ccs.neu.edu/home/iboehman/rt.png&quot;  alt=&quot;Risk Table&quot;/&gt;&lt;/p&gt;</description></item><item><title>Assignment 3 Question 1</title><link>http://yacn.me/2014/02/13/assignment3-question1/</link><pubDate>Thu, 13 Feb 2014 00:00:00 -0500</pubDate><description>&lt;h1&gt;Assignment 3 Question 1&lt;/h1&gt;&lt;p&gt;Using decision tables to model business rules is an easy way to obtain visibility of all the possible states of your system.&lt;/p&gt;&lt;p&gt;For example, consider the following business rules:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;The sales and marketing team at Willard's has started to implement a VIP program in which different levels of status can be achieved depending on annual spending amounts. Depending on the level different discount vouchers are issued monthly. Specifically, they would like to have two levels of VIP status: Silver and Gold. Gold members receive a $100 voucher once they spend a over $2,000, while Silver members get a $50 voucher. If they spend less than $2,000 they get a voucher for half the amount. However, they must spend at least $500. &lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;You could model the above as a decision table like so:&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://ccs.neu.edu/home/iboehman/dt.png&quot;  alt=&quot;Decision Table&quot;/&gt;&lt;/p&gt;</description></item><item><title>Assignment 2 Question 7</title><link>http://yacn.me/2014/01/28/assignment2-question7/</link><pubDate>Tue, 28 Jan 2014 00:00:00 -0500</pubDate><description>&lt;h1&gt;Assignment 2 Question 7&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://ecee.colorado.edu/~swengctf/standalone/handouts/RequirementsElicitationChecklist.pdf&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Were the requirements elicitation activities performed by an experienced analyst?&lt;/li&gt;
  &lt;li&gt;Was a shared vision, reflecting the organization's senior stakeholders perspective of the purpose and scope of the product/application/system, developed and documented?&lt;/li&gt;
  &lt;li&gt;Were the principal groups of users of the product/application/system identified?&lt;/li&gt;
  &lt;li&gt;Were the principal groups of users' characteristics documented?&lt;/li&gt;
  &lt;li&gt;Were representatives of these user groups identified?&lt;/li&gt;
  &lt;li&gt;Were representatives of these user groups available for consultation?&lt;/li&gt;
  &lt;li&gt;Were these representatives empowered to make decisions on behalf of the users they represented?&lt;/li&gt;
  &lt;li&gt;Were appropriate resources allocated to requirements gathering and documentation?&lt;/li&gt;
  &lt;li&gt;If the organization has an approved process for requirements elicitation, was it followed?&lt;/li&gt;
  &lt;li&gt;Were the risks of poor requirements gathering identified and documented?&lt;/li&gt;
  &lt;li&gt;Are the techniques used to elicit the requirements appropriate for the users?&lt;/li&gt;
  &lt;li&gt;Were the reasonings behind requirements clarified by asking 'why'?&lt;/li&gt;
  &lt;li&gt;Were the lessons learned from previous project post-mortems/retrospectives taken into consideration when planning requirements gathering activities?&lt;/li&gt;
  &lt;li&gt;Were there opportunities to go back to users for more information?&lt;/li&gt;
  &lt;li&gt;Have solution descriptions presented by users been exposed, and the underlying specific need uncovered?&lt;/li&gt;
  &lt;li&gt;Were the documented requirements analyzed to ensure thorough understanding?&lt;/li&gt;
  &lt;li&gt;Are users' needs clearly understood as separated from the implementation?&lt;/li&gt;
  &lt;li&gt;Were all feailure modes to be handled by the system identified?&lt;/li&gt;
  &lt;li&gt;Is the user who originated the requirement recorded?&lt;/li&gt;
  &lt;li&gt;Are industry/business-specific terms defined in a glossary?&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Assignment 2 Question 6</title><link>http://yacn.me/2014/01/28/assignment2-question6/</link><pubDate>Tue, 28 Jan 2014 00:00:00 -0500</pubDate><description>&lt;h1&gt;Assignment 2 Question 6&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://slid.es/isaacboehman-1/jira&quot;&gt;Presentation link&lt;/a&gt;&lt;/p&gt;</description></item><item><title>Assignment 2 Question 5</title><link>http://yacn.me/2014/01/28/assignment2-question5/</link><pubDate>Tue, 28 Jan 2014 00:00:00 -0500</pubDate><description>&lt;h1&gt;Assignment 2 Question 5&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://ccs.neu.edu/home/iboehman/oomm.png&quot;&gt;Mind map for this post&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;Offshore Outsourcing of Software Development: Does It Really Reduce Software Development Costs?&lt;/h2&gt;&lt;p&gt;My initial reaction to such a headline is &lt;a href=&quot;https://en.wikipedia.org/wiki/Betteridge%27s_law_of_headlines&quot;&gt;Betteridge's law of headlines&lt;/a&gt;, that is:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Any headline which ends in a question mark can be answered by the word &lt;em&gt;no&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;However, instead of simply dismissing the question, I decided to think it through a little more.&lt;/p&gt;&lt;h2&gt;The Good&lt;/h2&gt;&lt;p&gt;The only benefit I can think of for offshore outsourcing is how much cheaper it is than paying the salaries of software developers, or even the price of an onshore solution. However, I would always look into both of those alternatives first before thinking about looking into offshore outsourcing, and only if it were my last resort would I choose it. It just strikes me as &quot;wrong&quot;, which is completely and totally subjective, but is due to my bias as a software developer.&lt;/p&gt;&lt;p&gt;The only use case I can think of would be if I were a brand new startup with limited capital and I needed to get some &lt;a href=&quot;http://projects.csail.mit.edu/gsb/old-archive/gsb-archive/gsb2000-02-11.html&quot;&gt;yak shaving&lt;/a&gt; done to help me reach a target date. Even then, I would be hesitant.&lt;/p&gt;&lt;h3&gt;The Bad&lt;/h3&gt;&lt;p&gt;One of the many reasons against offshore outsourcing is that since it is offshore (I mean, it's in the name), and since you're outsourcing (and thus, are exporting your work to a country with cheaper labor) there is a very high likelyhood that the native language of the chosen country is not English.&lt;/p&gt;&lt;p&gt;Now, the degree to which this is detrimental can vary a bit. For example, if you were to say, outsource to an Eastern European country, their native language may not be English, but it is more likely that they will have a professional working proficiency of the language. This is not necessarily the case if you were to outsource to a place such as India.&lt;/p&gt;&lt;p&gt;Another thing to take into consideration is that you will eventually have to maintain the code you're outsourcing, unless you're simply outsourcing your entire product. At that point, is it even your product anymore? Ideas are are a dime a dozen, it's the implementation that's difficult and reaps the most rewards.&lt;/p&gt;&lt;p&gt;If you are going to maintain the code later on, you'll be paying some developer to go through and clean up the code and add features. This could take considerably more time and effort depending on the quality of the code base that the developer has to work with, and you'll have to cross your fingers that things such as variables, functions, classes, etcetera are named in English and not in the native tongue of the outsourced developer that originally wrote it.&lt;/p&gt;&lt;h2&gt;The Ugly&lt;/h2&gt;&lt;p&gt;Finally, we have the &quot;ugly&quot; reasons against offshore outsourcing. For one, there's always the question of the time difference. Like was stated before when discussing language barriers, it all depends on which country you end up using. For example, if you're located in San Francisco (UTC -5:00) and you choose to use a company located in Mumbai, India (UTC +5:30), the time difference will be 10.5 hours. This means that you'll have to have any real-time discussions, via telephone, Skype, etc, either very early in the morning or very late in the evening. If you choose a company located in Bucharest, Romania (UTC +2:00), the time difference will be &quot;just&quot; 8 hours, which is better, but still not anywhere close to being ideal for real-time communication. Which leads me to my point, any sort of non-trivial time difference will significantly slow development when any sort of clarification of requirements (or clarification of anything really) is required as you will either need to communicate via a slower method such as email, or you will need to wake up very early or stay very late to communicate in real-time. Both of these add significant delays to your project which add up over time to non-trivial costs of time, resources, and money.&lt;/p&gt;&lt;p&gt;One last &quot;ugly&quot; concern of offshore outsourcing is that you really need to be certain to pay careful attention to the company's reputation when selecting one for outsourcing and you should be certain that the code you receive is free of vulnerabilities and back-doors. If your company does not have the domain knowledge necessary to do so, you will need to hire yet &lt;em&gt;another&lt;/em&gt; company to audit the code for you. Now you could simply choose to not care about your users' security, but does that really sound like a way to win and keep customers? I for one would be very hesitant about supporting such a company.&lt;/p&gt;&lt;h2&gt;Conclusion&lt;/h2&gt;&lt;p&gt;In the end, I believe that the potential savings posed by offshore outsourcing are not truly savings, but are simply deferring the cost of development to a later point in time. Now, depending on the resources of a company, this could be an advantageous move, say if you were a startup with limited resources that just needs a little push to get going. However, if you have the resources to outsource the project onshore or even to hire developers, I believe there are few good reasons to choose offshore outsourcing over the other alternatives which have been presented.&lt;/p&gt;&lt;p&gt;In conclusion, Betteridge's law was right once again:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Any headline which ends in a question mark can be answered by the word &lt;em&gt;no&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description></item></channel></rss>